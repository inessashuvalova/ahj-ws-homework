{"version":3,"file":"app.js","mappings":"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","sources":["webpack://ahj-ws-homework/./src/js/engine/template.js","webpack://ahj-ws-homework/./src/js/app.js","webpack://ahj-ws-homework/./src/js/engine/widget.js"],"sourcesContent":["function container() {\n  const newContainer = document.createElement('main');\n  newContainer.classList.add('wrapper');\n  newContainer.innerHTML = `\n  <div class=\"widget-container\">\n  <h2 class=\"chat-header\">Chat</h2>\n  <div class=\"chat-container\">\n    <div class=\"list-wrapper\">\n      <ul id=\"usersContainer\" class=\"list-container users-container\"></ul>\n    </div>\n    <div class=\"list-wrapper\">\n      <ul id=\"msgContainer\" class=\"msg-container list-container\"></ul>\n    </div>\n  </div>\n  <form id=\"loginForm\" class=\"form__input-button-holder \">\n    <input\n      id=\"loginInput\"\n      class=\"form__input\"\n      type=\"text\"\n      placeholder=\"Введите псевдоним..\"\n      name=\"name\"\n      required\n    />\n    <button id=\"loginSend\" type=\"button\" class=\"btn btn-submit\">Войти</button>\n  </form>\n  <form id=\"msgForm\" class=\"form__input-button-holder visually-hidden\">\n    <input\n      id=\"msgInput\"\n      class=\"form__input\"\n      type=\"text\"\n      placeholder=\"Введите сообщение..\"\n      name=\"msg\"\n      required\n    />\n    <button id=\"msgSend\" type=\"button\" class=\"btn btn-submit\">Отправить</button>\n  </form>\n</div>\n  `;\n  return newContainer;\n}\n\nfunction unit(data) {\n  const newUnit = document.createElement('li');\n  newUnit.classList.add('unit');\n  newUnit.innerHTML = `${data.name}<br>${data.time}<br>${data.message}`;\n  return newUnit;\n}\n\nfunction userPic(data) {\n  const newUnit = document.createElement('li');\n  newUnit.classList.add('unit');\n  newUnit.dataset.userId = `${data.id}`;\n  newUnit.innerHTML = `<img class=\"userpic\">&nbsp<span class=\"username\">${data.name}</span>`;\n  return newUnit;\n}\n\nexport { container, unit, userPic };","import Widget from './engine/widget';\n\nexport default function app() {\n    const widget = new Widget();\n    widget.init();\n}\n\napp();","import { unit, container, userPic } from './template';\n\nexport default class Widget {\n  constructor() {\n    this.user = undefined;\n    this.webSocket = new WebSocket(`ws://localhost:9000/ws`);\n  }\n  async init() {\n    this.render();\n    this.bindToDOM();\n    this.signupListen();\n  }\n\n  render() {\n    document.body.append(container());\n  }\n\n  bindToDOM() {\n    // Получаем поле чата\n    this.chat = document.querySelector('ul.msg-container');\n    // Получаем поле пользователей\n    this.usersContainer = document.querySelector('ul.users-container');\n\n    // Получаем форму ввода имени\n    this.loginForm = document.querySelector('#loginForm');\n    // Получаем строку ввода имени\n    this.loginInput = document.querySelector('#loginInput');\n    // Получаем кнопку для ввода имени\n    this.loginSend = document.querySelector('#loginSend');\n\n    // Получаем форму отправки сообщений\n    this.sendMsgForm = document.querySelector('#msgForm');\n    // Получаем строку ввода сообщения\n    this.msgInput = document.querySelector('#msgInput');\n    // Получаем кнопку для ввода сообщения\n    this.btnMsgSend = document.querySelector('#msgSend');\n  }\n\n  signupListen() {\n    this.loginInput.focus();\n\n    // Получаем сообщение от сервера\n    this.webSocket.addEventListener(\n      'message',\n      (event) => {\n        event.preventDefault();\n        this.socketMsgHandler(event);\n      },\n      false\n    );\n\n    // Отслеживаем нажатие мыши\n    this.loginSend.addEventListener(\n      'click',\n      (event) => {\n        event.preventDefault();\n        this.signup();\n      },\n      false\n    );\n\n    // Отслеживаем отправку формы\n    this.loginForm.addEventListener(\n      'submit',\n      (event) => {\n        event.preventDefault();\n        this.signup();\n      },\n      false\n    );\n  }\n\n  async signup() {\n    const login = this.loginInput.value;\n    await this.webSocket.send(\n      JSON.stringify({\n        type: 'login',\n        login,\n        time: new Date(),\n      })\n    );\n  }\n\n  socketMsgHandler(event) {\n    const data = JSON.parse(event.data);\n    const { type, usersList, error, state } = data;\n\n    if (state === 'loginTrue') {\n      this.loginForm.classList.add('visually-hidden');\n      this.sendMsgForm.classList.remove('visually-hidden');\n      this.user = data.user;\n      this.chatInit();\n    }\n    if (error) {\n      const newMsg = unit(data);\n      newMsg.classList.add('error');\n      this.chat.append(newMsg);\n      this.chat.lastElementChild.scrollIntoView();\n      return;\n    }\n    if (type === 'msg' && this.user) {\n      let newMsg;\n      if (data.name === this.user.name) {\n        data.name = 'You';\n        newMsg = unit(data);\n        newMsg.classList.add('myself');\n      } else {\n        newMsg = unit(data);\n      }\n      this.chat.append(newMsg);\n      this.chat.lastElementChild.scrollIntoView();\n    }\n    if (usersList) {\n      this.users = JSON.parse(usersList);\n      this.renderUsers();\n    }\n  }\n\n  renderUsers() {\n    this.usersContainer.innerHTML = '';\n    for (let user of this.users) {\n      this.usersContainer.append(userPic(user));\n    }\n  }\n\n  async chatInit() {\n    this.msgInput.focus();\n\n    // Отслеживаем нажатие мыши\n    this.btnMsgSend.addEventListener(\n      'click',\n      (event) => {\n        event.preventDefault();\n        this.sendMsg();\n      },\n      false\n    );\n\n    // Отслеживаем отправку формы\n    this.sendMsgForm.addEventListener(\n      'submit',\n      (event) => {\n        event.preventDefault();\n        this.sendMsg();\n      },\n      false\n    );\n  }\n\n  async sendMsg() {\n    const message = this.msgInput.value;\n    await this.webSocket.send(\n      JSON.stringify({\n        type: 'msg',\n        message: message,\n        userId: this.user.id,\n        time: new Date(),\n      })\n    );\n    this.msgInput.value = '';\n  }\n}"],"names":["unit","data","newUnit","document","createElement","classList","add","innerHTML","name","time","message","userPic","dataset","userId","id","constructor","this","user","undefined","webSocket","WebSocket","render","bindToDOM","signupListen","body","append","newContainer","container","chat","querySelector","usersContainer","loginForm","loginInput","loginSend","sendMsgForm","msgInput","btnMsgSend","focus","addEventListener","event","preventDefault","socketMsgHandler","signup","login","value","send","JSON","stringify","type","Date","parse","usersList","error","state","remove","chatInit","newMsg","lastElementChild","scrollIntoView","users","renderUsers","sendMsg","init"],"sourceRoot":""}